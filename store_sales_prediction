{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "73d81b1c",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:39.528559Z",
     "iopub.status.busy": "2025-04-28T01:45:39.528251Z",
     "iopub.status.idle": "2025-04-28T01:45:41.395161Z",
     "shell.execute_reply": "2025-04-28T01:45:41.394198Z"
    },
    "papermill": {
     "duration": 1.874835,
     "end_time": "2025-04-28T01:45:41.396936",
     "exception": false,
     "start_time": "2025-04-28T01:45:39.522101",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/store-sales-time-series-forecasting/oil.csv\n",
      "/kaggle/input/store-sales-time-series-forecasting/sample_submission.csv\n",
      "/kaggle/input/store-sales-time-series-forecasting/holidays_events.csv\n",
      "/kaggle/input/store-sales-time-series-forecasting/stores.csv\n",
      "/kaggle/input/store-sales-time-series-forecasting/train.csv\n",
      "/kaggle/input/store-sales-time-series-forecasting/test.csv\n",
      "/kaggle/input/store-sales-time-series-forecasting/transactions.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a6f56ae6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:41.407272Z",
     "iopub.status.busy": "2025-04-28T01:45:41.406846Z",
     "iopub.status.idle": "2025-04-28T01:45:44.782893Z",
     "shell.execute_reply": "2025-04-28T01:45:44.782190Z"
    },
    "papermill": {
     "duration": 3.382876,
     "end_time": "2025-04-28T01:45:44.784545",
     "exception": false,
     "start_time": "2025-04-28T01:45:41.401669",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 메인 데이터\n",
    "train = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/train.csv\", parse_dates=['date'])\n",
    "test = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/test.csv\", parse_dates=['date'])\n",
    "\n",
    "# 보조 데이터\n",
    "stores = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/stores.csv\")\n",
    "holidays = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/holidays_events.csv\", parse_dates=['date'])\n",
    "transactions = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/transactions.csv\", parse_dates=['date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "47d67059",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:44.795258Z",
     "iopub.status.busy": "2025-04-28T01:45:44.794531Z",
     "iopub.status.idle": "2025-04-28T01:45:45.165288Z",
     "shell.execute_reply": "2025-04-28T01:45:45.164548Z"
    },
    "papermill": {
     "duration": 0.377715,
     "end_time": "2025-04-28T01:45:45.166905",
     "exception": false,
     "start_time": "2025-04-28T01:45:44.789190",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "for df in [train, test]:\n",
    "    # 연도 추출\n",
    "    df['year']=df['date'].dt.year\n",
    "    # 월 추출\n",
    "    df['month']=df['date'].dt.month\n",
    "    # 일 추출\n",
    "    df['day']=df['date'].dt.day\n",
    "    # 요일 추출\n",
    "    df['dayofweek'] = df['date'].dt.dayofweek\n",
    "    # 주말인지 확인\n",
    "    df['weekend'] = df['dayofweek'].isin([5,6]).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "824cd350",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:45.177034Z",
     "iopub.status.busy": "2025-04-28T01:45:45.176224Z",
     "iopub.status.idle": "2025-04-28T01:45:45.777383Z",
     "shell.execute_reply": "2025-04-28T01:45:45.776427Z"
    },
    "papermill": {
     "duration": 0.607921,
     "end_time": "2025-04-28T01:45:45.779131",
     "exception": false,
     "start_time": "2025-04-28T01:45:45.171210",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train = train.merge(stores, on=\"store_nbr\", how=\"left\")\n",
    "test = test.merge(stores, on=\"store_nbr\", how=\"left\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c181cc8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:45.789196Z",
     "iopub.status.busy": "2025-04-28T01:45:45.788905Z",
     "iopub.status.idle": "2025-04-28T01:45:46.730870Z",
     "shell.execute_reply": "2025-04-28T01:45:46.730065Z"
    },
    "papermill": {
     "duration": 0.948844,
     "end_time": "2025-04-28T01:45:46.732460",
     "exception": false,
     "start_time": "2025-04-28T01:45:45.783616",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train = train.merge(transactions, on=[\"store_nbr\",\"date\"], how=\"left\")\n",
    "test = test.merge(transactions, on=[\"store_nbr\",\"date\"], how=\"left\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1f84a088",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.741872Z",
     "iopub.status.busy": "2025-04-28T01:45:46.741550Z",
     "iopub.status.idle": "2025-04-28T01:45:46.769458Z",
     "shell.execute_reply": "2025-04-28T01:45:46.768565Z"
    },
    "papermill": {
     "duration": 0.034305,
     "end_time": "2025-04-28T01:45:46.770977",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.736672",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n",
      "  has_large_values = (abs_vals > 1e6).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n",
      "  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n",
      "  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>store_nbr</th>\n",
       "      <th>family</th>\n",
       "      <th>sales</th>\n",
       "      <th>onpromotion</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>dayofweek</th>\n",
       "      <th>weekend</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>type</th>\n",
       "      <th>cluster</th>\n",
       "      <th>transactions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>AUTOMOTIVE</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BABY CARE</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BEAUTY</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BEVERAGES</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BOOKS</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000883</th>\n",
       "      <td>3000883</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>POULTRY</td>\n",
       "      <td>438.133</td>\n",
       "      <td>0</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000884</th>\n",
       "      <td>3000884</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>PREPARED FOODS</td>\n",
       "      <td>154.553</td>\n",
       "      <td>1</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000885</th>\n",
       "      <td>3000885</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>PRODUCE</td>\n",
       "      <td>2419.729</td>\n",
       "      <td>148</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000886</th>\n",
       "      <td>3000886</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>SCHOOL AND OFFICE SUPPLIES</td>\n",
       "      <td>121.000</td>\n",
       "      <td>8</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000887</th>\n",
       "      <td>3000887</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>SEAFOOD</td>\n",
       "      <td>16.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3000888 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id       date  store_nbr                      family     sales  \\\n",
       "0              0 2013-01-01          1                  AUTOMOTIVE     0.000   \n",
       "1              1 2013-01-01          1                   BABY CARE     0.000   \n",
       "2              2 2013-01-01          1                      BEAUTY     0.000   \n",
       "3              3 2013-01-01          1                   BEVERAGES     0.000   \n",
       "4              4 2013-01-01          1                       BOOKS     0.000   \n",
       "...          ...        ...        ...                         ...       ...   \n",
       "3000883  3000883 2017-08-15          9                     POULTRY   438.133   \n",
       "3000884  3000884 2017-08-15          9              PREPARED FOODS   154.553   \n",
       "3000885  3000885 2017-08-15          9                     PRODUCE  2419.729   \n",
       "3000886  3000886 2017-08-15          9  SCHOOL AND OFFICE SUPPLIES   121.000   \n",
       "3000887  3000887 2017-08-15          9                     SEAFOOD    16.000   \n",
       "\n",
       "         onpromotion  year  month  day  dayofweek  weekend   city      state  \\\n",
       "0                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "1                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "2                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "3                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "4                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "...              ...   ...    ...  ...        ...      ...    ...        ...   \n",
       "3000883            0  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000884            1  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000885          148  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000886            8  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000887            0  2017      8   15          1        0  Quito  Pichincha   \n",
       "\n",
       "        type  cluster  transactions  \n",
       "0          D       13           NaN  \n",
       "1          D       13           NaN  \n",
       "2          D       13           NaN  \n",
       "3          D       13           NaN  \n",
       "4          D       13           NaN  \n",
       "...      ...      ...           ...  \n",
       "3000883    B        6        2155.0  \n",
       "3000884    B        6        2155.0  \n",
       "3000885    B        6        2155.0  \n",
       "3000886    B        6        2155.0  \n",
       "3000887    B        6        2155.0  \n",
       "\n",
       "[3000888 rows x 16 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d2d0d365",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.781563Z",
     "iopub.status.busy": "2025-04-28T01:45:46.781247Z",
     "iopub.status.idle": "2025-04-28T01:45:46.788754Z",
     "shell.execute_reply": "2025-04-28T01:45:46.787920Z"
    },
    "papermill": {
     "duration": 0.014219,
     "end_time": "2025-04-28T01:45:46.790047",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.775828",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0             NaN\n",
       "1             NaN\n",
       "2             NaN\n",
       "3             NaN\n",
       "4             NaN\n",
       "            ...  \n",
       "3000883    2155.0\n",
       "3000884    2155.0\n",
       "3000885    2155.0\n",
       "3000886    2155.0\n",
       "3000887    2155.0\n",
       "Name: transactions, Length: 3000888, dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['transactions']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0b3b306e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.800944Z",
     "iopub.status.busy": "2025-04-28T01:45:46.800325Z",
     "iopub.status.idle": "2025-04-28T01:45:46.846519Z",
     "shell.execute_reply": "2025-04-28T01:45:46.845628Z"
    },
    "papermill": {
     "duration": 0.053474,
     "end_time": "2025-04-28T01:45:46.848182",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.794708",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 결측치는 0으로 채우기\n",
    "train['transactions'] = train['transactions'].fillna(0)\n",
    "test['transactions'] = test['transactions'].fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "87e2512c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.859193Z",
     "iopub.status.busy": "2025-04-28T01:45:46.858513Z",
     "iopub.status.idle": "2025-04-28T01:45:46.863194Z",
     "shell.execute_reply": "2025-04-28T01:45:46.862304Z"
    },
    "papermill": {
     "duration": 0.011702,
     "end_time": "2025-04-28T01:45:46.864726",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.853024",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 공휴일 분류\n",
    "holidays[\"is_holiday\"] = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a87fb6b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.875672Z",
     "iopub.status.busy": "2025-04-28T01:45:46.875385Z",
     "iopub.status.idle": "2025-04-28T01:45:46.881931Z",
     "shell.execute_reply": "2025-04-28T01:45:46.881283Z"
    },
    "papermill": {
     "duration": 0.013644,
     "end_time": "2025-04-28T01:45:46.883320",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.869676",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "holidays_sim = holidays [[\"date\", \"is_holiday\"]].drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "09ed9d23",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.894262Z",
     "iopub.status.busy": "2025-04-28T01:45:46.893619Z",
     "iopub.status.idle": "2025-04-28T01:45:46.902558Z",
     "shell.execute_reply": "2025-04-28T01:45:46.901900Z"
    },
    "papermill": {
     "duration": 0.015802,
     "end_time": "2025-04-28T01:45:46.903875",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.888073",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>is_holiday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-03-02</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-04-01</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-04-12</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-04-14</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-04-21</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344</th>\n",
       "      <td>2017-12-22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>2017-12-23</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>347</th>\n",
       "      <td>2017-12-24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>348</th>\n",
       "      <td>2017-12-25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>349</th>\n",
       "      <td>2017-12-26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>312 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          date  is_holiday\n",
       "0   2012-03-02           1\n",
       "1   2012-04-01           1\n",
       "2   2012-04-12           1\n",
       "3   2012-04-14           1\n",
       "4   2012-04-21           1\n",
       "..         ...         ...\n",
       "344 2017-12-22           1\n",
       "346 2017-12-23           1\n",
       "347 2017-12-24           1\n",
       "348 2017-12-25           1\n",
       "349 2017-12-26           1\n",
       "\n",
       "[312 rows x 2 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "holidays_sim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e59b3912",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:46.914858Z",
     "iopub.status.busy": "2025-04-28T01:45:46.914279Z",
     "iopub.status.idle": "2025-04-28T01:45:47.232114Z",
     "shell.execute_reply": "2025-04-28T01:45:47.231278Z"
    },
    "papermill": {
     "duration": 0.324831,
     "end_time": "2025-04-28T01:45:47.233682",
     "exception": false,
     "start_time": "2025-04-28T01:45:46.908851",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 데이터 합치기\n",
    "train = train.merge(holidays_sim, on=\"date\", how=\"left\")\n",
    "test = test.merge(holidays_sim, on=\"date\", how=\"left\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f7666253",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:47.244567Z",
     "iopub.status.busy": "2025-04-28T01:45:47.244274Z",
     "iopub.status.idle": "2025-04-28T01:45:47.261576Z",
     "shell.execute_reply": "2025-04-28T01:45:47.260790Z"
    },
    "papermill": {
     "duration": 0.024312,
     "end_time": "2025-04-28T01:45:47.262986",
     "exception": false,
     "start_time": "2025-04-28T01:45:47.238674",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>store_nbr</th>\n",
       "      <th>family</th>\n",
       "      <th>sales</th>\n",
       "      <th>onpromotion</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>dayofweek</th>\n",
       "      <th>weekend</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>type</th>\n",
       "      <th>cluster</th>\n",
       "      <th>transactions</th>\n",
       "      <th>is_holiday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>AUTOMOTIVE</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BABY CARE</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BEAUTY</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BEVERAGES</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2013-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>BOOKS</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>D</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000883</th>\n",
       "      <td>3000883</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>POULTRY</td>\n",
       "      <td>438.133</td>\n",
       "      <td>0</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000884</th>\n",
       "      <td>3000884</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>PREPARED FOODS</td>\n",
       "      <td>154.553</td>\n",
       "      <td>1</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000885</th>\n",
       "      <td>3000885</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>PRODUCE</td>\n",
       "      <td>2419.729</td>\n",
       "      <td>148</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000886</th>\n",
       "      <td>3000886</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>SCHOOL AND OFFICE SUPPLIES</td>\n",
       "      <td>121.000</td>\n",
       "      <td>8</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000887</th>\n",
       "      <td>3000887</td>\n",
       "      <td>2017-08-15</td>\n",
       "      <td>9</td>\n",
       "      <td>SEAFOOD</td>\n",
       "      <td>16.000</td>\n",
       "      <td>0</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Quito</td>\n",
       "      <td>Pichincha</td>\n",
       "      <td>B</td>\n",
       "      <td>6</td>\n",
       "      <td>2155.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3000888 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id       date  store_nbr                      family     sales  \\\n",
       "0              0 2013-01-01          1                  AUTOMOTIVE     0.000   \n",
       "1              1 2013-01-01          1                   BABY CARE     0.000   \n",
       "2              2 2013-01-01          1                      BEAUTY     0.000   \n",
       "3              3 2013-01-01          1                   BEVERAGES     0.000   \n",
       "4              4 2013-01-01          1                       BOOKS     0.000   \n",
       "...          ...        ...        ...                         ...       ...   \n",
       "3000883  3000883 2017-08-15          9                     POULTRY   438.133   \n",
       "3000884  3000884 2017-08-15          9              PREPARED FOODS   154.553   \n",
       "3000885  3000885 2017-08-15          9                     PRODUCE  2419.729   \n",
       "3000886  3000886 2017-08-15          9  SCHOOL AND OFFICE SUPPLIES   121.000   \n",
       "3000887  3000887 2017-08-15          9                     SEAFOOD    16.000   \n",
       "\n",
       "         onpromotion  year  month  day  dayofweek  weekend   city      state  \\\n",
       "0                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "1                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "2                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "3                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "4                  0  2013      1    1          1        0  Quito  Pichincha   \n",
       "...              ...   ...    ...  ...        ...      ...    ...        ...   \n",
       "3000883            0  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000884            1  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000885          148  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000886            8  2017      8   15          1        0  Quito  Pichincha   \n",
       "3000887            0  2017      8   15          1        0  Quito  Pichincha   \n",
       "\n",
       "        type  cluster  transactions  is_holiday  \n",
       "0          D       13           0.0         1.0  \n",
       "1          D       13           0.0         1.0  \n",
       "2          D       13           0.0         1.0  \n",
       "3          D       13           0.0         1.0  \n",
       "4          D       13           0.0         1.0  \n",
       "...      ...      ...           ...         ...  \n",
       "3000883    B        6        2155.0         1.0  \n",
       "3000884    B        6        2155.0         1.0  \n",
       "3000885    B        6        2155.0         1.0  \n",
       "3000886    B        6        2155.0         1.0  \n",
       "3000887    B        6        2155.0         1.0  \n",
       "\n",
       "[3000888 rows x 17 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "df1b9abf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:47.274633Z",
     "iopub.status.busy": "2025-04-28T01:45:47.274095Z",
     "iopub.status.idle": "2025-04-28T01:45:47.297086Z",
     "shell.execute_reply": "2025-04-28T01:45:47.296292Z"
    },
    "papermill": {
     "duration": 0.030471,
     "end_time": "2025-04-28T01:45:47.298643",
     "exception": false,
     "start_time": "2025-04-28T01:45:47.268172",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train['is_holiday'] = train['is_holiday'].fillna(0)\n",
    "test['is_holiday'] = test['is_holiday'].fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "33345169",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:47.310302Z",
     "iopub.status.busy": "2025-04-28T01:45:47.310003Z",
     "iopub.status.idle": "2025-04-28T01:45:47.451214Z",
     "shell.execute_reply": "2025-04-28T01:45:47.450275Z"
    },
    "papermill": {
     "duration": 0.149087,
     "end_time": "2025-04-28T01:45:47.452962",
     "exception": false,
     "start_time": "2025-04-28T01:45:47.303875",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 범주형 데이터 골라내기\n",
    "\n",
    "cat_cols = train.select_dtypes(include='object').columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3e497fcd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:47.464333Z",
     "iopub.status.busy": "2025-04-28T01:45:47.464050Z",
     "iopub.status.idle": "2025-04-28T01:45:49.269035Z",
     "shell.execute_reply": "2025-04-28T01:45:49.268114Z"
    },
    "papermill": {
     "duration": 1.812507,
     "end_time": "2025-04-28T01:45:49.270781",
     "exception": false,
     "start_time": "2025-04-28T01:45:47.458274",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train = pd.get_dummies(train, columns=cat_cols)\n",
    "test = pd.get_dummies(test, columns=cat_cols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "db0a3981",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:49.283621Z",
     "iopub.status.busy": "2025-04-28T01:45:49.282567Z",
     "iopub.status.idle": "2025-04-28T01:45:49.299919Z",
     "shell.execute_reply": "2025-04-28T01:45:49.298590Z"
    },
    "papermill": {
     "duration": 0.024646,
     "end_time": "2025-04-28T01:45:49.301334",
     "exception": false,
     "start_time": "2025-04-28T01:45:49.276688",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3000888 entries, 0 to 3000887\n",
      "Data columns (total 89 columns):\n",
      " #   Column                                Dtype         \n",
      "---  ------                                -----         \n",
      " 0   id                                    int64         \n",
      " 1   date                                  datetime64[ns]\n",
      " 2   store_nbr                             int64         \n",
      " 3   sales                                 float64       \n",
      " 4   onpromotion                           int64         \n",
      " 5   year                                  int32         \n",
      " 6   month                                 int32         \n",
      " 7   day                                   int32         \n",
      " 8   dayofweek                             int32         \n",
      " 9   weekend                               int64         \n",
      " 10  cluster                               int64         \n",
      " 11  transactions                          float64       \n",
      " 12  is_holiday                            float64       \n",
      " 13  family_AUTOMOTIVE                     bool          \n",
      " 14  family_BABY CARE                      bool          \n",
      " 15  family_BEAUTY                         bool          \n",
      " 16  family_BEVERAGES                      bool          \n",
      " 17  family_BOOKS                          bool          \n",
      " 18  family_BREAD/BAKERY                   bool          \n",
      " 19  family_CELEBRATION                    bool          \n",
      " 20  family_CLEANING                       bool          \n",
      " 21  family_DAIRY                          bool          \n",
      " 22  family_DELI                           bool          \n",
      " 23  family_EGGS                           bool          \n",
      " 24  family_FROZEN FOODS                   bool          \n",
      " 25  family_GROCERY I                      bool          \n",
      " 26  family_GROCERY II                     bool          \n",
      " 27  family_HARDWARE                       bool          \n",
      " 28  family_HOME AND KITCHEN I             bool          \n",
      " 29  family_HOME AND KITCHEN II            bool          \n",
      " 30  family_HOME APPLIANCES                bool          \n",
      " 31  family_HOME CARE                      bool          \n",
      " 32  family_LADIESWEAR                     bool          \n",
      " 33  family_LAWN AND GARDEN                bool          \n",
      " 34  family_LINGERIE                       bool          \n",
      " 35  family_LIQUOR,WINE,BEER               bool          \n",
      " 36  family_MAGAZINES                      bool          \n",
      " 37  family_MEATS                          bool          \n",
      " 38  family_PERSONAL CARE                  bool          \n",
      " 39  family_PET SUPPLIES                   bool          \n",
      " 40  family_PLAYERS AND ELECTRONICS        bool          \n",
      " 41  family_POULTRY                        bool          \n",
      " 42  family_PREPARED FOODS                 bool          \n",
      " 43  family_PRODUCE                        bool          \n",
      " 44  family_SCHOOL AND OFFICE SUPPLIES     bool          \n",
      " 45  family_SEAFOOD                        bool          \n",
      " 46  city_Ambato                           bool          \n",
      " 47  city_Babahoyo                         bool          \n",
      " 48  city_Cayambe                          bool          \n",
      " 49  city_Cuenca                           bool          \n",
      " 50  city_Daule                            bool          \n",
      " 51  city_El Carmen                        bool          \n",
      " 52  city_Esmeraldas                       bool          \n",
      " 53  city_Guaranda                         bool          \n",
      " 54  city_Guayaquil                        bool          \n",
      " 55  city_Ibarra                           bool          \n",
      " 56  city_Latacunga                        bool          \n",
      " 57  city_Libertad                         bool          \n",
      " 58  city_Loja                             bool          \n",
      " 59  city_Machala                          bool          \n",
      " 60  city_Manta                            bool          \n",
      " 61  city_Playas                           bool          \n",
      " 62  city_Puyo                             bool          \n",
      " 63  city_Quevedo                          bool          \n",
      " 64  city_Quito                            bool          \n",
      " 65  city_Riobamba                         bool          \n",
      " 66  city_Salinas                          bool          \n",
      " 67  city_Santo Domingo                    bool          \n",
      " 68  state_Azuay                           bool          \n",
      " 69  state_Bolivar                         bool          \n",
      " 70  state_Chimborazo                      bool          \n",
      " 71  state_Cotopaxi                        bool          \n",
      " 72  state_El Oro                          bool          \n",
      " 73  state_Esmeraldas                      bool          \n",
      " 74  state_Guayas                          bool          \n",
      " 75  state_Imbabura                        bool          \n",
      " 76  state_Loja                            bool          \n",
      " 77  state_Los Rios                        bool          \n",
      " 78  state_Manabi                          bool          \n",
      " 79  state_Pastaza                         bool          \n",
      " 80  state_Pichincha                       bool          \n",
      " 81  state_Santa Elena                     bool          \n",
      " 82  state_Santo Domingo de los Tsachilas  bool          \n",
      " 83  state_Tungurahua                      bool          \n",
      " 84  type_A                                bool          \n",
      " 85  type_B                                bool          \n",
      " 86  type_C                                bool          \n",
      " 87  type_D                                bool          \n",
      " 88  type_E                                bool          \n",
      "dtypes: bool(76), datetime64[ns](1), float64(3), int32(4), int64(5)\n",
      "memory usage: 469.3 MB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0a7ada7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:49.313105Z",
     "iopub.status.busy": "2025-04-28T01:45:49.312833Z",
     "iopub.status.idle": "2025-04-28T01:45:49.564162Z",
     "shell.execute_reply": "2025-04-28T01:45:49.563357Z"
    },
    "papermill": {
     "duration": 0.258851,
     "end_time": "2025-04-28T01:45:49.565653",
     "exception": false,
     "start_time": "2025-04-28T01:45:49.306802",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y = train[\"sales\"]\n",
    "\n",
    "X = train.drop(columns=[\"id\",\"date\", \"sales\"])\n",
    "X_test = test.drop(columns=[\"id\",\"date\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e9336693",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:49.578330Z",
     "iopub.status.busy": "2025-04-28T01:45:49.577391Z",
     "iopub.status.idle": "2025-04-28T01:45:51.409610Z",
     "shell.execute_reply": "2025-04-28T01:45:51.408900Z"
    },
    "papermill": {
     "duration": 1.840132,
     "end_time": "2025-04-28T01:45:51.411242",
     "exception": false,
     "start_time": "2025-04-28T01:45:49.571110",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "model = RandomForestRegressor(\n",
    "    n_estimators=100,  # 트리 개수\n",
    "    max_depth=10,      # 트리 최대 깊이\n",
    "    random_state=42    # 랜덤 고정 (결과 재현 가능하게)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "0b09a268",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T01:45:51.423311Z",
     "iopub.status.busy": "2025-04-28T01:45:51.422889Z",
     "iopub.status.idle": "2025-04-28T02:20:31.067480Z",
     "shell.execute_reply": "2025-04-28T02:20:31.066500Z"
    },
    "papermill": {
     "duration": 2079.657364,
     "end_time": "2025-04-28T02:20:31.074060",
     "exception": false,
     "start_time": "2025-04-28T01:45:51.416696",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(max_depth=10, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(max_depth=10, random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(max_depth=10, random_state=42)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "5f1f15c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T02:20:31.086210Z",
     "iopub.status.busy": "2025-04-28T02:20:31.085881Z",
     "iopub.status.idle": "2025-04-28T02:20:31.192498Z",
     "shell.execute_reply": "2025-04-28T02:20:31.191786Z"
    },
    "papermill": {
     "duration": 0.114515,
     "end_time": "2025-04-28T02:20:31.194082",
     "exception": false,
     "start_time": "2025-04-28T02:20:31.079567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "predictions = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e93f083d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T02:20:31.206229Z",
     "iopub.status.busy": "2025-04-28T02:20:31.205914Z",
     "iopub.status.idle": "2025-04-28T02:20:31.310476Z",
     "shell.execute_reply": "2025-04-28T02:20:31.309793Z"
    },
    "papermill": {
     "duration": 0.112175,
     "end_time": "2025-04-28T02:20:31.311955",
     "exception": false,
     "start_time": "2025-04-28T02:20:31.199780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sample_submission 불러오기\n",
    "submission = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/sample_submission.csv\")\n",
    "\n",
    "# sales 컬럼에 예측 결과 넣기\n",
    "submission['sales'] = predictions\n",
    "\n",
    "# 저장\n",
    "submission.to_csv('submission.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2e6f3636",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-28T02:20:31.324226Z",
     "iopub.status.busy": "2025-04-28T02:20:31.323907Z",
     "iopub.status.idle": "2025-04-28T02:20:31.333301Z",
     "shell.execute_reply": "2025-04-28T02:20:31.332486Z"
    },
    "papermill": {
     "duration": 0.017074,
     "end_time": "2025-04-28T02:20:31.334609",
     "exception": false,
     "start_time": "2025-04-28T02:20:31.317535",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3000888</td>\n",
       "      <td>28.740364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3000889</td>\n",
       "      <td>28.740364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3000890</td>\n",
       "      <td>106.258202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3000891</td>\n",
       "      <td>3860.584773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3000892</td>\n",
       "      <td>28.740364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28507</th>\n",
       "      <td>3029395</td>\n",
       "      <td>106.258202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28508</th>\n",
       "      <td>3029396</td>\n",
       "      <td>28.740364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28509</th>\n",
       "      <td>3029397</td>\n",
       "      <td>4212.601347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28510</th>\n",
       "      <td>3029398</td>\n",
       "      <td>223.793089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28511</th>\n",
       "      <td>3029399</td>\n",
       "      <td>28.740364</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>28512 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id        sales\n",
       "0      3000888    28.740364\n",
       "1      3000889    28.740364\n",
       "2      3000890   106.258202\n",
       "3      3000891  3860.584773\n",
       "4      3000892    28.740364\n",
       "...        ...          ...\n",
       "28507  3029395   106.258202\n",
       "28508  3029396    28.740364\n",
       "28509  3029397  4212.601347\n",
       "28510  3029398   223.793089\n",
       "28511  3029399    28.740364\n",
       "\n",
       "[28512 rows x 2 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 2887556,
     "sourceId": 29781,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2097.351719,
   "end_time": "2025-04-28T02:20:32.163873",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-28T01:45:34.812154",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
